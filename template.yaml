AWSTemplateFormatVersion: '2010-09-09'
Description: 'CloudFormation template for Falcon MCP CodeBuild with flexible source options'

Parameters:
  Environment:
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - staging
      - prod
    Description: Environment name

  ProjectName:
    Type: String
    Default: falcon-mcp
    Description: Name of the CodeBuild project

  RepositoryUrl:
    Type: String
    Default: ""
    Description: Git repository URL (leave empty to use S3 source)

  SourceType:
    Type: String
    Default: S3
    AllowedValues:
      - CODECOMMIT
      - S3
      - GITHUB
    Description: Source type for the CodeBuild project

  S3Bucket:
    Type: String
    Default: ""
    Description: S3 bucket name for source code (required when SourceType is S3)

  S3Key:
    Type: String
    Default: source.zip
    Description: S3 object key for source code (used when SourceType is S3)

  GitHubTokenSecretArn:
    Type: String
    Default: ""
    Description: ARN of the AWS Secrets Manager secret containing the GitHub personal access token (required when SourceType is GITHUB)

Conditions:
  UseGitHub: !Equals [ !Ref SourceType, GITHUB ]
  UseCodeCommit: !Equals [ !Ref SourceType, CODECOMMIT ]
  UseS3: !Equals [ !Ref SourceType, S3 ]
  HasWebhooks: !Or [ !Condition UseGitHub, !Condition UseCodeCommit ]

Resources:
  # CodeBuild Project
  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub "${ProjectName}-${Environment}"
      Description: !Sub "CodeBuild project for ${ProjectName} in ${Environment}"
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Artifacts:
        Type: NO_ARTIFACTS
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0
        EnvironmentVariables:
          - Name: ENVIRONMENT
            Value: !Ref Environment
          - Name: UV_COMPILE_BYTECODE
            Value: "1"
          - Name: UV_LINK_MODE
            Value: copy
      Source: !If
        - UseGitHub
        - Type: GITHUB
          Location: !Ref RepositoryUrl
          GitCloneDepth: 1
          BuildSpec: buildspec.yml
          Auth:
            Type: OAUTH
            Resource: !Ref GitHubTokenSecretArn
        - !If
          - UseCodeCommit
          - Type: CODECOMMIT
            Location: !Ref RepositoryUrl
            BuildSpec: buildspec.yml
          - Type: S3
            Location: !Sub "s3://${S3Bucket}/${S3Key}"
            BuildSpec: buildspec.yml
      Triggers: !If
        - HasWebhooks
        - Webhook: true
          FilterGroups:
            - - Type: EVENT
                Pattern: PUSH
              - Type: HEAD_REF
                Pattern: "^refs/heads/main$"
        - !Ref "AWS::NoValue"

  # IAM Role for CodeBuild
  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${ProjectName}-codebuild-role-${Environment}"
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/CloudWatchLogsFullAccess
      Policies:
        - PolicyName: CodeBuildPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: '*'
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:GetBucketAcl
                  - s3:GetBucketLocation
                Resource: '*'
              - !If
                - UseGitHub
                - Effect: Allow
                  Action:
                    - secretsmanager:GetSecretValue
                  Resource: !Ref GitHubTokenSecretArn
                - !Ref "AWS::NoValue"

  # CloudWatch Log Group
  CodeBuildLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/codebuild/${ProjectName}-${Environment}"
      RetentionInDays: 30

Outputs:
  CodeBuildProjectName:
    Description: Name of the CodeBuild project
    Value: !Ref CodeBuildProject
    Export:
      Name: !Sub "${ProjectName}-codebuild-project-${Environment}"

  CodeBuildProjectArn:
    Description: ARN of the CodeBuild project
    Value: !GetAtt CodeBuildProject.Arn
    Export:
      Name: !Sub "${ProjectName}-codebuild-arn-${Environment}"
