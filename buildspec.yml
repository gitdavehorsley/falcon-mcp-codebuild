version: 0.2

phases:
  install:
    runtime-versions:
      python: 3.13
    commands:
      - echo "Installing uv and dependencies..."
      - curl -LsSf https://astral.sh/uv/install.sh | sh
      - export PATH="$HOME/.local/bin:$PATH"
      - uv --version

  pre_build:
    commands:
      - echo "Setting up Python environment..."
      - export PATH="$HOME/.local/bin:$PATH"
      - uv lock --check
      - uv sync --frozen --no-install-project --no-dev --no-editable

  build:
    commands:
      - echo "Running linting and type checking..."
      - export PATH="$HOME/.local/bin:$PATH"
      - uv run ruff check .
      - uv run mypy .
      - uv run black --check .
      - echo "Running tests..."
      - uv run pytest

  post_build:
    commands:
      - echo "Build completed successfully"
      - |
        if [ "$CREATE_ECR" = "true" ] && [ -f Dockerfile ]; then
          echo "Building and pushing Docker image to ECR..."
          export PATH="$HOME/.local/bin:$PATH"
          uv build
          aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
          REPOSITORY_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME
          COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
          IMAGE_TAG_COMMIT=${COMMIT_HASH:=latest}
          docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG .
          docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $REPOSITORY_URI:$IMAGE_TAG
          docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $REPOSITORY_URI:$IMAGE_TAG_COMMIT
          docker push $REPOSITORY_URI:$IMAGE_TAG
          docker push $REPOSITORY_URI:$IMAGE_TAG_COMMIT
          printf '[{"name":"falcon-mcp","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
        else
          echo "Creating distribution package..."
          export PATH="$HOME/.local/bin:$PATH"
          uv build
        fi

artifacts:
  files:
    - 'dist/**/*'
    - 'pyproject.toml'
    - 'uv.lock'
    - 'imagedefinitions.json'
  discard-paths: no

cache:
  paths:
    - '$HOME/.cache/uv/**/*'
    - '$HOME/.local/bin/**/*'
